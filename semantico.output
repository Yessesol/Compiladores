Terminales no usados en gramática

   BOOLEAN


Gramática

    0 $accept: program $end

    1 program: MAIN '(' ')' '{' commands '}' program_end
    2        | error

    3 program_end: %empty
    4            | ID '(' ')' '{' commands '}' program_end
    5            | error

    6 commands: command_list

    7 command_list: '{' command_list '}'
    8             | command command_list
    9             | %empty

   10 command: cmd ';'
   11        | stmt
   12        | error

   13 stmt: if_stmt
   14     | for_stmt
   15     | while_stmt
   16     | dowhile_stmt

   17 cmd: PRINT STRING
   18    | BREAK
   19    | RETURN ID
   20    | attrib
   21    | declaration

   22 if_stmt: IF '(' l_expr ')' '{' commands '}' else_stmt

   23 else_stmt: %empty
   24          | ELSE '{' commands '}'

   25 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird ')' '{' commands '}'

   26 ffirst: %empty
   27       | attrib_list

   28 fthird: %empty
   29       | cmd ',' fthird
   30       | cmd

   31 while_stmt: WHILE '(' l_expr ')' '{' commands '}'

   32 dowhile_stmt: DO '{' commands '}' WHILE '(' l_expr ')' ';'

   33 declaration: INT_TYPE ID
   34            | FLOAT_TYPE ID
   35            | BOOL_TYPE ID

   36 attrib_list: attrib ',' attrib_list
   37            | attrib

   38 attrib: i_attrib
   39       | ID MATH_INC
   40       | ID MATH_DEC
   41       | ID '=' ID
   42       | error

   43 i_attrib: ID '=' g_expr

   44 l_expr: l_expr LOG_EQL l_factor
   45       | l_expr LOG_AND l_factor
   46       | l_expr LOG_OR l_factor
   47       | l_expr LOG_GT l_factor
   48       | l_expr LOG_LT l_factor
   49       | LOG_NOT l_expr
   50       | l_factor

   51 l_factor: '(' l_expr ')'
   52         | INTEGER
   53         | REAL
   54         | ID

   55 g_expr: g_expr '+' g_term
   56       | g_expr '-' g_term
   57       | g_term

   58 g_term: g_term '*' g_factor
   59       | g_term '/' g_factor
   60       | g_factor

   61 g_factor: '(' g_expr ')'
   62         | INTEGER
   63         | REAL


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 1 4 22 25 31 32 51 61
')' (41) 1 4 22 25 31 32 51 61
'*' (42) 58
'+' (43) 55
',' (44) 29 36
'-' (45) 56
'/' (47) 59
';' (59) 10 25 32
'=' (61) 41 43
'{' (123) 1 4 7 22 24 25 31 32
'}' (125) 1 4 7 22 24 25 31 32
error (256) 2 5 12 42
MAIN (258) 1
IF (259) 22
ELSE (260) 24
DO (261) 32
WHILE (262) 31 32
FOR (263) 25
BREAK (264) 18
PRINT (265) 17
RETURN (266) 19
INT_TYPE (267) 33
FLOAT_TYPE (268) 34
BOOL_TYPE (269) 35
STRING (270) 17
INTEGER (271) 52 62
REAL (272) 53 63
BOOLEAN (273)
ID (274) 4 19 33 34 35 39 40 41 43 54
MATH_INC (275) 39
MATH_DEC (276) 40
LOG_EQL (277) 44
LOG_LT (278) 48
LOG_GT (279) 47
LOG_AND (280) 45
LOG_OR (281) 46
LOG_NOT (282) 49


No terminales con las reglas donde aparecen

$accept (39)
    en la izquierda: 0
program (40)
    en la izquierda: 1 2, en la derecha: 0
program_end (41)
    en la izquierda: 3 4 5, en la derecha: 1 4
commands (42)
    en la izquierda: 6, en la derecha: 1 4 22 24 25 31 32
command_list (43)
    en la izquierda: 7 8 9, en la derecha: 6 7 8
command (44)
    en la izquierda: 10 11 12, en la derecha: 8
stmt (45)
    en la izquierda: 13 14 15 16, en la derecha: 11
cmd (46)
    en la izquierda: 17 18 19 20 21, en la derecha: 10 29 30
if_stmt (47)
    en la izquierda: 22, en la derecha: 13
else_stmt (48)
    en la izquierda: 23 24, en la derecha: 22
for_stmt (49)
    en la izquierda: 25, en la derecha: 14
ffirst (50)
    en la izquierda: 26 27, en la derecha: 25
fthird (51)
    en la izquierda: 28 29 30, en la derecha: 25 29
while_stmt (52)
    en la izquierda: 31, en la derecha: 15
dowhile_stmt (53)
    en la izquierda: 32, en la derecha: 16
declaration (54)
    en la izquierda: 33 34 35, en la derecha: 21
attrib_list (55)
    en la izquierda: 36 37, en la derecha: 27 36
attrib (56)
    en la izquierda: 38 39 40 41 42, en la derecha: 20 36 37
i_attrib (57)
    en la izquierda: 43, en la derecha: 38
l_expr (58)
    en la izquierda: 44 45 46 47 48 49 50, en la derecha: 22 25 31
    32 44 45 46 47 48 49 51
l_factor (59)
    en la izquierda: 51 52 53 54, en la derecha: 44 45 46 47 48 50
g_expr (60)
    en la izquierda: 55 56 57, en la derecha: 43 55 56 61
g_term (61)
    en la izquierda: 58 59 60, en la derecha: 55 56 57 58 59
g_factor (62)
    en la izquierda: 61 62 63, en la derecha: 58 59 60


State 0

    0 $accept: . program $end

    error  desplazar e ir al estado 1
    MAIN   desplazar e ir al estado 2

    program  ir al estado 3


State 1

    2 program: error .

    $default  reduce usando la regla 2 (program)


State 2

    1 program: MAIN . '(' ')' '{' commands '}' program_end

    '('  desplazar e ir al estado 4


State 3

    0 $accept: program . $end

    $end  desplazar e ir al estado 5


State 4

    1 program: MAIN '(' . ')' '{' commands '}' program_end

    ')'  desplazar e ir al estado 6


State 5

    0 $accept: program $end .

    $default  aceptar


State 6

    1 program: MAIN '(' ')' . '{' commands '}' program_end

    '{'  desplazar e ir al estado 7


State 7

    1 program: MAIN '(' ')' '{' . commands '}' program_end

    error       desplazar e ir al estado 8
    IF          desplazar e ir al estado 9
    DO          desplazar e ir al estado 10
    WHILE       desplazar e ir al estado 11
    FOR         desplazar e ir al estado 12
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    '{'         desplazar e ir al estado 20

    '}'  reduce usando la regla 9 (command_list)

    commands      ir al estado 21
    command_list  ir al estado 22
    command       ir al estado 23
    stmt          ir al estado 24
    cmd           ir al estado 25
    if_stmt       ir al estado 26
    for_stmt      ir al estado 27
    while_stmt    ir al estado 28
    dowhile_stmt  ir al estado 29
    declaration   ir al estado 30
    attrib        ir al estado 31
    i_attrib      ir al estado 32


State 8

   12 command: error .
   42 attrib: error .

    ';'       reduce usando la regla 42 (attrib)
    $default  reduce usando la regla 12 (command)


State 9

   22 if_stmt: IF . '(' l_expr ')' '{' commands '}' else_stmt

    '('  desplazar e ir al estado 33


State 10

   32 dowhile_stmt: DO . '{' commands '}' WHILE '(' l_expr ')' ';'

    '{'  desplazar e ir al estado 34


State 11

   31 while_stmt: WHILE . '(' l_expr ')' '{' commands '}'

    '('  desplazar e ir al estado 35


State 12

   25 for_stmt: FOR . '(' ffirst ';' l_expr ';' fthird ')' '{' commands '}'

    '('  desplazar e ir al estado 36


State 13

   18 cmd: BREAK .

    $default  reduce usando la regla 18 (cmd)


State 14

   17 cmd: PRINT . STRING

    STRING  desplazar e ir al estado 37


State 15

   19 cmd: RETURN . ID

    ID  desplazar e ir al estado 38


State 16

   33 declaration: INT_TYPE . ID

    ID  desplazar e ir al estado 39


State 17

   34 declaration: FLOAT_TYPE . ID

    ID  desplazar e ir al estado 40


State 18

   35 declaration: BOOL_TYPE . ID

    ID  desplazar e ir al estado 41


State 19

   39 attrib: ID . MATH_INC
   40       | ID . MATH_DEC
   41       | ID . '=' ID
   43 i_attrib: ID . '=' g_expr

    MATH_INC  desplazar e ir al estado 42
    MATH_DEC  desplazar e ir al estado 43
    '='       desplazar e ir al estado 44


State 20

    7 command_list: '{' . command_list '}'

    error       desplazar e ir al estado 8
    IF          desplazar e ir al estado 9
    DO          desplazar e ir al estado 10
    WHILE       desplazar e ir al estado 11
    FOR         desplazar e ir al estado 12
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    '{'         desplazar e ir al estado 20

    '}'  reduce usando la regla 9 (command_list)

    command_list  ir al estado 45
    command       ir al estado 23
    stmt          ir al estado 24
    cmd           ir al estado 25
    if_stmt       ir al estado 26
    for_stmt      ir al estado 27
    while_stmt    ir al estado 28
    dowhile_stmt  ir al estado 29
    declaration   ir al estado 30
    attrib        ir al estado 31
    i_attrib      ir al estado 32


State 21

    1 program: MAIN '(' ')' '{' commands . '}' program_end

    '}'  desplazar e ir al estado 46


State 22

    6 commands: command_list .

    $default  reduce usando la regla 6 (commands)


State 23

    8 command_list: command . command_list

    error       desplazar e ir al estado 8
    IF          desplazar e ir al estado 9
    DO          desplazar e ir al estado 10
    WHILE       desplazar e ir al estado 11
    FOR         desplazar e ir al estado 12
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    '{'         desplazar e ir al estado 20

    '}'  reduce usando la regla 9 (command_list)

    command_list  ir al estado 47
    command       ir al estado 23
    stmt          ir al estado 24
    cmd           ir al estado 25
    if_stmt       ir al estado 26
    for_stmt      ir al estado 27
    while_stmt    ir al estado 28
    dowhile_stmt  ir al estado 29
    declaration   ir al estado 30
    attrib        ir al estado 31
    i_attrib      ir al estado 32


State 24

   11 command: stmt .

    $default  reduce usando la regla 11 (command)


State 25

   10 command: cmd . ';'

    ';'  desplazar e ir al estado 48


State 26

   13 stmt: if_stmt .

    $default  reduce usando la regla 13 (stmt)


State 27

   14 stmt: for_stmt .

    $default  reduce usando la regla 14 (stmt)


State 28

   15 stmt: while_stmt .

    $default  reduce usando la regla 15 (stmt)


State 29

   16 stmt: dowhile_stmt .

    $default  reduce usando la regla 16 (stmt)


State 30

   21 cmd: declaration .

    $default  reduce usando la regla 21 (cmd)


State 31

   20 cmd: attrib .

    $default  reduce usando la regla 20 (cmd)


State 32

   38 attrib: i_attrib .

    $default  reduce usando la regla 38 (attrib)


State 33

   22 if_stmt: IF '(' . l_expr ')' '{' commands '}' else_stmt

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    LOG_NOT  desplazar e ir al estado 52
    '('      desplazar e ir al estado 53

    l_expr    ir al estado 54
    l_factor  ir al estado 55


State 34

   32 dowhile_stmt: DO '{' . commands '}' WHILE '(' l_expr ')' ';'

    error       desplazar e ir al estado 8
    IF          desplazar e ir al estado 9
    DO          desplazar e ir al estado 10
    WHILE       desplazar e ir al estado 11
    FOR         desplazar e ir al estado 12
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    '{'         desplazar e ir al estado 20

    '}'  reduce usando la regla 9 (command_list)

    commands      ir al estado 56
    command_list  ir al estado 22
    command       ir al estado 23
    stmt          ir al estado 24
    cmd           ir al estado 25
    if_stmt       ir al estado 26
    for_stmt      ir al estado 27
    while_stmt    ir al estado 28
    dowhile_stmt  ir al estado 29
    declaration   ir al estado 30
    attrib        ir al estado 31
    i_attrib      ir al estado 32


State 35

   31 while_stmt: WHILE '(' . l_expr ')' '{' commands '}'

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    LOG_NOT  desplazar e ir al estado 52
    '('      desplazar e ir al estado 53

    l_expr    ir al estado 57
    l_factor  ir al estado 55


State 36

   25 for_stmt: FOR '(' . ffirst ';' l_expr ';' fthird ')' '{' commands '}'

    error  desplazar e ir al estado 58
    ID     desplazar e ir al estado 19

    ';'  reduce usando la regla 26 (ffirst)

    ffirst       ir al estado 59
    attrib_list  ir al estado 60
    attrib       ir al estado 61
    i_attrib     ir al estado 32


State 37

   17 cmd: PRINT STRING .

    $default  reduce usando la regla 17 (cmd)


State 38

   19 cmd: RETURN ID .

    $default  reduce usando la regla 19 (cmd)


State 39

   33 declaration: INT_TYPE ID .

    $default  reduce usando la regla 33 (declaration)


State 40

   34 declaration: FLOAT_TYPE ID .

    $default  reduce usando la regla 34 (declaration)


State 41

   35 declaration: BOOL_TYPE ID .

    $default  reduce usando la regla 35 (declaration)


State 42

   39 attrib: ID MATH_INC .

    $default  reduce usando la regla 39 (attrib)


State 43

   40 attrib: ID MATH_DEC .

    $default  reduce usando la regla 40 (attrib)


State 44

   41 attrib: ID '=' . ID
   43 i_attrib: ID '=' . g_expr

    INTEGER  desplazar e ir al estado 62
    REAL     desplazar e ir al estado 63
    ID       desplazar e ir al estado 64
    '('      desplazar e ir al estado 65

    g_expr    ir al estado 66
    g_term    ir al estado 67
    g_factor  ir al estado 68


State 45

    7 command_list: '{' command_list . '}'

    '}'  desplazar e ir al estado 69


State 46

    1 program: MAIN '(' ')' '{' commands '}' . program_end

    error  desplazar e ir al estado 70
    ID     desplazar e ir al estado 71

    $end  reduce usando la regla 3 (program_end)

    program_end  ir al estado 72


State 47

    8 command_list: command command_list .

    $default  reduce usando la regla 8 (command_list)


State 48

   10 command: cmd ';' .

    $default  reduce usando la regla 10 (command)


State 49

   52 l_factor: INTEGER .

    $default  reduce usando la regla 52 (l_factor)


State 50

   53 l_factor: REAL .

    $default  reduce usando la regla 53 (l_factor)


State 51

   54 l_factor: ID .

    $default  reduce usando la regla 54 (l_factor)


State 52

   49 l_expr: LOG_NOT . l_expr

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    LOG_NOT  desplazar e ir al estado 52
    '('      desplazar e ir al estado 53

    l_expr    ir al estado 73
    l_factor  ir al estado 55


State 53

   51 l_factor: '(' . l_expr ')'

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    LOG_NOT  desplazar e ir al estado 52
    '('      desplazar e ir al estado 53

    l_expr    ir al estado 74
    l_factor  ir al estado 55


State 54

   22 if_stmt: IF '(' l_expr . ')' '{' commands '}' else_stmt
   44 l_expr: l_expr . LOG_EQL l_factor
   45       | l_expr . LOG_AND l_factor
   46       | l_expr . LOG_OR l_factor
   47       | l_expr . LOG_GT l_factor
   48       | l_expr . LOG_LT l_factor

    LOG_EQL  desplazar e ir al estado 75
    LOG_LT   desplazar e ir al estado 76
    LOG_GT   desplazar e ir al estado 77
    LOG_AND  desplazar e ir al estado 78
    LOG_OR   desplazar e ir al estado 79
    ')'      desplazar e ir al estado 80


State 55

   50 l_expr: l_factor .

    $default  reduce usando la regla 50 (l_expr)


State 56

   32 dowhile_stmt: DO '{' commands . '}' WHILE '(' l_expr ')' ';'

    '}'  desplazar e ir al estado 81


State 57

   31 while_stmt: WHILE '(' l_expr . ')' '{' commands '}'
   44 l_expr: l_expr . LOG_EQL l_factor
   45       | l_expr . LOG_AND l_factor
   46       | l_expr . LOG_OR l_factor
   47       | l_expr . LOG_GT l_factor
   48       | l_expr . LOG_LT l_factor

    LOG_EQL  desplazar e ir al estado 75
    LOG_LT   desplazar e ir al estado 76
    LOG_GT   desplazar e ir al estado 77
    LOG_AND  desplazar e ir al estado 78
    LOG_OR   desplazar e ir al estado 79
    ')'      desplazar e ir al estado 82


State 58

   42 attrib: error .

    $default  reduce usando la regla 42 (attrib)


State 59

   25 for_stmt: FOR '(' ffirst . ';' l_expr ';' fthird ')' '{' commands '}'

    ';'  desplazar e ir al estado 83


State 60

   27 ffirst: attrib_list .

    $default  reduce usando la regla 27 (ffirst)


State 61

   36 attrib_list: attrib . ',' attrib_list
   37            | attrib .

    ','  desplazar e ir al estado 84

    $default  reduce usando la regla 37 (attrib_list)


State 62

   62 g_factor: INTEGER .

    $default  reduce usando la regla 62 (g_factor)


State 63

   63 g_factor: REAL .

    $default  reduce usando la regla 63 (g_factor)


State 64

   41 attrib: ID '=' ID .

    $default  reduce usando la regla 41 (attrib)


State 65

   61 g_factor: '(' . g_expr ')'

    INTEGER  desplazar e ir al estado 62
    REAL     desplazar e ir al estado 63
    '('      desplazar e ir al estado 65

    g_expr    ir al estado 85
    g_term    ir al estado 67
    g_factor  ir al estado 68


State 66

   43 i_attrib: ID '=' g_expr .
   55 g_expr: g_expr . '+' g_term
   56       | g_expr . '-' g_term

    '+'  desplazar e ir al estado 86
    '-'  desplazar e ir al estado 87

    $default  reduce usando la regla 43 (i_attrib)


State 67

   57 g_expr: g_term .
   58 g_term: g_term . '*' g_factor
   59       | g_term . '/' g_factor

    '*'  desplazar e ir al estado 88
    '/'  desplazar e ir al estado 89

    $default  reduce usando la regla 57 (g_expr)


State 68

   60 g_term: g_factor .

    $default  reduce usando la regla 60 (g_term)


State 69

    7 command_list: '{' command_list '}' .

    $default  reduce usando la regla 7 (command_list)


State 70

    5 program_end: error .

    $default  reduce usando la regla 5 (program_end)


State 71

    4 program_end: ID . '(' ')' '{' commands '}' program_end

    '('  desplazar e ir al estado 90


State 72

    1 program: MAIN '(' ')' '{' commands '}' program_end .

    $default  reduce usando la regla 1 (program)


State 73

   44 l_expr: l_expr . LOG_EQL l_factor
   45       | l_expr . LOG_AND l_factor
   46       | l_expr . LOG_OR l_factor
   47       | l_expr . LOG_GT l_factor
   48       | l_expr . LOG_LT l_factor
   49       | LOG_NOT l_expr .

    $default  reduce usando la regla 49 (l_expr)


State 74

   44 l_expr: l_expr . LOG_EQL l_factor
   45       | l_expr . LOG_AND l_factor
   46       | l_expr . LOG_OR l_factor
   47       | l_expr . LOG_GT l_factor
   48       | l_expr . LOG_LT l_factor
   51 l_factor: '(' l_expr . ')'

    LOG_EQL  desplazar e ir al estado 75
    LOG_LT   desplazar e ir al estado 76
    LOG_GT   desplazar e ir al estado 77
    LOG_AND  desplazar e ir al estado 78
    LOG_OR   desplazar e ir al estado 79
    ')'      desplazar e ir al estado 91


State 75

   44 l_expr: l_expr LOG_EQL . l_factor

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    '('      desplazar e ir al estado 53

    l_factor  ir al estado 92


State 76

   48 l_expr: l_expr LOG_LT . l_factor

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    '('      desplazar e ir al estado 53

    l_factor  ir al estado 93


State 77

   47 l_expr: l_expr LOG_GT . l_factor

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    '('      desplazar e ir al estado 53

    l_factor  ir al estado 94


State 78

   45 l_expr: l_expr LOG_AND . l_factor

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    '('      desplazar e ir al estado 53

    l_factor  ir al estado 95


State 79

   46 l_expr: l_expr LOG_OR . l_factor

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    '('      desplazar e ir al estado 53

    l_factor  ir al estado 96


State 80

   22 if_stmt: IF '(' l_expr ')' . '{' commands '}' else_stmt

    '{'  desplazar e ir al estado 97


State 81

   32 dowhile_stmt: DO '{' commands '}' . WHILE '(' l_expr ')' ';'

    WHILE  desplazar e ir al estado 98


State 82

   31 while_stmt: WHILE '(' l_expr ')' . '{' commands '}'

    '{'  desplazar e ir al estado 99


State 83

   25 for_stmt: FOR '(' ffirst ';' . l_expr ';' fthird ')' '{' commands '}'

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    LOG_NOT  desplazar e ir al estado 52
    '('      desplazar e ir al estado 53

    l_expr    ir al estado 100
    l_factor  ir al estado 55


State 84

   36 attrib_list: attrib ',' . attrib_list

    error  desplazar e ir al estado 58
    ID     desplazar e ir al estado 19

    attrib_list  ir al estado 101
    attrib       ir al estado 61
    i_attrib     ir al estado 32


State 85

   55 g_expr: g_expr . '+' g_term
   56       | g_expr . '-' g_term
   61 g_factor: '(' g_expr . ')'

    '+'  desplazar e ir al estado 86
    '-'  desplazar e ir al estado 87
    ')'  desplazar e ir al estado 102


State 86

   55 g_expr: g_expr '+' . g_term

    INTEGER  desplazar e ir al estado 62
    REAL     desplazar e ir al estado 63
    '('      desplazar e ir al estado 65

    g_term    ir al estado 103
    g_factor  ir al estado 68


State 87

   56 g_expr: g_expr '-' . g_term

    INTEGER  desplazar e ir al estado 62
    REAL     desplazar e ir al estado 63
    '('      desplazar e ir al estado 65

    g_term    ir al estado 104
    g_factor  ir al estado 68


State 88

   58 g_term: g_term '*' . g_factor

    INTEGER  desplazar e ir al estado 62
    REAL     desplazar e ir al estado 63
    '('      desplazar e ir al estado 65

    g_factor  ir al estado 105


State 89

   59 g_term: g_term '/' . g_factor

    INTEGER  desplazar e ir al estado 62
    REAL     desplazar e ir al estado 63
    '('      desplazar e ir al estado 65

    g_factor  ir al estado 106


State 90

    4 program_end: ID '(' . ')' '{' commands '}' program_end

    ')'  desplazar e ir al estado 107


State 91

   51 l_factor: '(' l_expr ')' .

    $default  reduce usando la regla 51 (l_factor)


State 92

   44 l_expr: l_expr LOG_EQL l_factor .

    $default  reduce usando la regla 44 (l_expr)


State 93

   48 l_expr: l_expr LOG_LT l_factor .

    $default  reduce usando la regla 48 (l_expr)


State 94

   47 l_expr: l_expr LOG_GT l_factor .

    $default  reduce usando la regla 47 (l_expr)


State 95

   45 l_expr: l_expr LOG_AND l_factor .

    $default  reduce usando la regla 45 (l_expr)


State 96

   46 l_expr: l_expr LOG_OR l_factor .

    $default  reduce usando la regla 46 (l_expr)


State 97

   22 if_stmt: IF '(' l_expr ')' '{' . commands '}' else_stmt

    error       desplazar e ir al estado 8
    IF          desplazar e ir al estado 9
    DO          desplazar e ir al estado 10
    WHILE       desplazar e ir al estado 11
    FOR         desplazar e ir al estado 12
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    '{'         desplazar e ir al estado 20

    '}'  reduce usando la regla 9 (command_list)

    commands      ir al estado 108
    command_list  ir al estado 22
    command       ir al estado 23
    stmt          ir al estado 24
    cmd           ir al estado 25
    if_stmt       ir al estado 26
    for_stmt      ir al estado 27
    while_stmt    ir al estado 28
    dowhile_stmt  ir al estado 29
    declaration   ir al estado 30
    attrib        ir al estado 31
    i_attrib      ir al estado 32


State 98

   32 dowhile_stmt: DO '{' commands '}' WHILE . '(' l_expr ')' ';'

    '('  desplazar e ir al estado 109


State 99

   31 while_stmt: WHILE '(' l_expr ')' '{' . commands '}'

    error       desplazar e ir al estado 8
    IF          desplazar e ir al estado 9
    DO          desplazar e ir al estado 10
    WHILE       desplazar e ir al estado 11
    FOR         desplazar e ir al estado 12
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    '{'         desplazar e ir al estado 20

    '}'  reduce usando la regla 9 (command_list)

    commands      ir al estado 110
    command_list  ir al estado 22
    command       ir al estado 23
    stmt          ir al estado 24
    cmd           ir al estado 25
    if_stmt       ir al estado 26
    for_stmt      ir al estado 27
    while_stmt    ir al estado 28
    dowhile_stmt  ir al estado 29
    declaration   ir al estado 30
    attrib        ir al estado 31
    i_attrib      ir al estado 32


State 100

   25 for_stmt: FOR '(' ffirst ';' l_expr . ';' fthird ')' '{' commands '}'
   44 l_expr: l_expr . LOG_EQL l_factor
   45       | l_expr . LOG_AND l_factor
   46       | l_expr . LOG_OR l_factor
   47       | l_expr . LOG_GT l_factor
   48       | l_expr . LOG_LT l_factor

    LOG_EQL  desplazar e ir al estado 75
    LOG_LT   desplazar e ir al estado 76
    LOG_GT   desplazar e ir al estado 77
    LOG_AND  desplazar e ir al estado 78
    LOG_OR   desplazar e ir al estado 79
    ';'      desplazar e ir al estado 111


State 101

   36 attrib_list: attrib ',' attrib_list .

    $default  reduce usando la regla 36 (attrib_list)


State 102

   61 g_factor: '(' g_expr ')' .

    $default  reduce usando la regla 61 (g_factor)


State 103

   55 g_expr: g_expr '+' g_term .
   58 g_term: g_term . '*' g_factor
   59       | g_term . '/' g_factor

    '*'  desplazar e ir al estado 88
    '/'  desplazar e ir al estado 89

    $default  reduce usando la regla 55 (g_expr)


State 104

   56 g_expr: g_expr '-' g_term .
   58 g_term: g_term . '*' g_factor
   59       | g_term . '/' g_factor

    '*'  desplazar e ir al estado 88
    '/'  desplazar e ir al estado 89

    $default  reduce usando la regla 56 (g_expr)


State 105

   58 g_term: g_term '*' g_factor .

    $default  reduce usando la regla 58 (g_term)


State 106

   59 g_term: g_term '/' g_factor .

    $default  reduce usando la regla 59 (g_term)


State 107

    4 program_end: ID '(' ')' . '{' commands '}' program_end

    '{'  desplazar e ir al estado 112


State 108

   22 if_stmt: IF '(' l_expr ')' '{' commands . '}' else_stmt

    '}'  desplazar e ir al estado 113


State 109

   32 dowhile_stmt: DO '{' commands '}' WHILE '(' . l_expr ')' ';'

    INTEGER  desplazar e ir al estado 49
    REAL     desplazar e ir al estado 50
    ID       desplazar e ir al estado 51
    LOG_NOT  desplazar e ir al estado 52
    '('      desplazar e ir al estado 53

    l_expr    ir al estado 114
    l_factor  ir al estado 55


State 110

   31 while_stmt: WHILE '(' l_expr ')' '{' commands . '}'

    '}'  desplazar e ir al estado 115


State 111

   25 for_stmt: FOR '(' ffirst ';' l_expr ';' . fthird ')' '{' commands '}'

    error       desplazar e ir al estado 58
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19

    ')'  reduce usando la regla 28 (fthird)

    cmd          ir al estado 116
    fthird       ir al estado 117
    declaration  ir al estado 30
    attrib       ir al estado 31
    i_attrib     ir al estado 32


State 112

    4 program_end: ID '(' ')' '{' . commands '}' program_end

    error       desplazar e ir al estado 8
    IF          desplazar e ir al estado 9
    DO          desplazar e ir al estado 10
    WHILE       desplazar e ir al estado 11
    FOR         desplazar e ir al estado 12
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    '{'         desplazar e ir al estado 20

    '}'  reduce usando la regla 9 (command_list)

    commands      ir al estado 118
    command_list  ir al estado 22
    command       ir al estado 23
    stmt          ir al estado 24
    cmd           ir al estado 25
    if_stmt       ir al estado 26
    for_stmt      ir al estado 27
    while_stmt    ir al estado 28
    dowhile_stmt  ir al estado 29
    declaration   ir al estado 30
    attrib        ir al estado 31
    i_attrib      ir al estado 32


State 113

   22 if_stmt: IF '(' l_expr ')' '{' commands '}' . else_stmt

    ELSE  desplazar e ir al estado 119

    $default  reduce usando la regla 23 (else_stmt)

    else_stmt  ir al estado 120


State 114

   32 dowhile_stmt: DO '{' commands '}' WHILE '(' l_expr . ')' ';'
   44 l_expr: l_expr . LOG_EQL l_factor
   45       | l_expr . LOG_AND l_factor
   46       | l_expr . LOG_OR l_factor
   47       | l_expr . LOG_GT l_factor
   48       | l_expr . LOG_LT l_factor

    LOG_EQL  desplazar e ir al estado 75
    LOG_LT   desplazar e ir al estado 76
    LOG_GT   desplazar e ir al estado 77
    LOG_AND  desplazar e ir al estado 78
    LOG_OR   desplazar e ir al estado 79
    ')'      desplazar e ir al estado 121


State 115

   31 while_stmt: WHILE '(' l_expr ')' '{' commands '}' .

    $default  reduce usando la regla 31 (while_stmt)


State 116

   29 fthird: cmd . ',' fthird
   30       | cmd .

    ','  desplazar e ir al estado 122

    $default  reduce usando la regla 30 (fthird)


State 117

   25 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird . ')' '{' commands '}'

    ')'  desplazar e ir al estado 123


State 118

    4 program_end: ID '(' ')' '{' commands . '}' program_end

    '}'  desplazar e ir al estado 124


State 119

   24 else_stmt: ELSE . '{' commands '}'

    '{'  desplazar e ir al estado 125


State 120

   22 if_stmt: IF '(' l_expr ')' '{' commands '}' else_stmt .

    $default  reduce usando la regla 22 (if_stmt)


State 121

   32 dowhile_stmt: DO '{' commands '}' WHILE '(' l_expr ')' . ';'

    ';'  desplazar e ir al estado 126


State 122

   29 fthird: cmd ',' . fthird

    error       desplazar e ir al estado 58
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19

    ')'  reduce usando la regla 28 (fthird)

    cmd          ir al estado 116
    fthird       ir al estado 127
    declaration  ir al estado 30
    attrib       ir al estado 31
    i_attrib     ir al estado 32


State 123

   25 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird ')' . '{' commands '}'

    '{'  desplazar e ir al estado 128


State 124

    4 program_end: ID '(' ')' '{' commands '}' . program_end

    error  desplazar e ir al estado 70
    ID     desplazar e ir al estado 71

    $end  reduce usando la regla 3 (program_end)

    program_end  ir al estado 129


State 125

   24 else_stmt: ELSE '{' . commands '}'

    error       desplazar e ir al estado 8
    IF          desplazar e ir al estado 9
    DO          desplazar e ir al estado 10
    WHILE       desplazar e ir al estado 11
    FOR         desplazar e ir al estado 12
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    '{'         desplazar e ir al estado 20

    '}'  reduce usando la regla 9 (command_list)

    commands      ir al estado 130
    command_list  ir al estado 22
    command       ir al estado 23
    stmt          ir al estado 24
    cmd           ir al estado 25
    if_stmt       ir al estado 26
    for_stmt      ir al estado 27
    while_stmt    ir al estado 28
    dowhile_stmt  ir al estado 29
    declaration   ir al estado 30
    attrib        ir al estado 31
    i_attrib      ir al estado 32


State 126

   32 dowhile_stmt: DO '{' commands '}' WHILE '(' l_expr ')' ';' .

    $default  reduce usando la regla 32 (dowhile_stmt)


State 127

   29 fthird: cmd ',' fthird .

    $default  reduce usando la regla 29 (fthird)


State 128

   25 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird ')' '{' . commands '}'

    error       desplazar e ir al estado 8
    IF          desplazar e ir al estado 9
    DO          desplazar e ir al estado 10
    WHILE       desplazar e ir al estado 11
    FOR         desplazar e ir al estado 12
    BREAK       desplazar e ir al estado 13
    PRINT       desplazar e ir al estado 14
    RETURN      desplazar e ir al estado 15
    INT_TYPE    desplazar e ir al estado 16
    FLOAT_TYPE  desplazar e ir al estado 17
    BOOL_TYPE   desplazar e ir al estado 18
    ID          desplazar e ir al estado 19
    '{'         desplazar e ir al estado 20

    '}'  reduce usando la regla 9 (command_list)

    commands      ir al estado 131
    command_list  ir al estado 22
    command       ir al estado 23
    stmt          ir al estado 24
    cmd           ir al estado 25
    if_stmt       ir al estado 26
    for_stmt      ir al estado 27
    while_stmt    ir al estado 28
    dowhile_stmt  ir al estado 29
    declaration   ir al estado 30
    attrib        ir al estado 31
    i_attrib      ir al estado 32


State 129

    4 program_end: ID '(' ')' '{' commands '}' program_end .

    $default  reduce usando la regla 4 (program_end)


State 130

   24 else_stmt: ELSE '{' commands . '}'

    '}'  desplazar e ir al estado 132


State 131

   25 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird ')' '{' commands . '}'

    '}'  desplazar e ir al estado 133


State 132

   24 else_stmt: ELSE '{' commands '}' .

    $default  reduce usando la regla 24 (else_stmt)


State 133

   25 for_stmt: FOR '(' ffirst ';' l_expr ';' fthird ')' '{' commands '}' .

    $default  reduce usando la regla 25 (for_stmt)
